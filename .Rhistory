set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
set.seed(1234)
x = rtmvn(n = burn,
Mean = mu_post,
Sigma_chol = sqrt(sigma2[i]) * chol_V_post,
D = diag(n - k),
lower = rep(0, n - k),
upper = rep(lambda, n - k),
init = rep(lambda / 2, n - k))[, burn]
xx = rtmvn_r(n = burn,
Mean = mu_post,
Sigma_chol = sqrt(sigma2[i]) * chol_V_post,
D = diag(n - k),
lower = rep(0, n - k),
upper = rep(lambda, n - k),
init = rep(lambda / 2, n - k))[, burn]
set.seed(1234)
xx = rtmvn_r(n = burn,
Mean = mu_post,
Sigma_chol = sqrt(sigma2[i]) * chol_V_post,
D = diag(n - k),
lower = rep(0, n - k),
upper = rep(lambda, n - k),
init = rep(lambda / 2, n - k))[, burn]
sample_tuvsn(.707176, 1.978338)
sample_tuvsn_r(.707176, 1.978338)
set.seed(1234)
sample_tuvsn_r(.707176, 1.978338)
set.seed(1234)
sample_tuvsn(.707176, 1.978338)
# sample_tuvsn test 2
seed = sample(1:1000, size = 1)
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test 2
seed = sample(1:1000, size = 1)
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test 2
seed = sample(1:1000, size = 1)
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
x
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
y
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test 2
seed = 1235
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
x
y
library(tmvn)
source('~/Desktop/debug_btf.R', echo=TRUE)
document()
library(devtools)
document()
build()
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
x
y
a > -
0
a > 0
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3(a, b)
x == y
x
y
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3(a, b)
x == y
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
x
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3(a, b)
x == y
x
y
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
x
y
library(tmvn)
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3(a, b)
x == y
# sample_tuvsn test 2
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
b
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
x
y
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
library(tmvn)
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
source('~/Desktop/debug_btf.R', echo=TRUE)
save_tests = rep(NA, iters)
source('~/Desktop/debug_btf.R', echo=TRUE)
save_tests
library(tmvn)
source('~/Desktop/debug_btf.R', echo=TRUE)
prod(save_tests)
library(tmvn)
source('~/Desktop/debug_btf.R', echo=TRUE)
library(tmvn)
source('~/Desktop/debug_btf.R', echo=TRUE)
library(tmvn)
source('~/Desktop/debug_btf.R', echo=TRUE)
source('~/Desktop/debug_btf.R', echo=TRUE)
prod(save_tests)
library(tmvn)
source('~/Desktop/Link to Research/test_r_cpp.R', echo=TRUE)
seed = sample(1:1000, size = 1)
a = -1; b = 1
set.seed(seed)
x = norm_rej(a, b)
set.seed(seed)
y = norm_rej_r(a, b)$x
x == y
set.seed(1234)
a = 1
b = 2
iters = 1000
x = y = rep(0, iters)
for(i in 1:iters)
{
x[i] = halfnorm_rej(a, b)
y[i] = halfnorm_rej_r(a, b)$x
}
ks.test(x, y)
seed = sample(1:1000, size = 1)
a = 5; b = 6
set.seed(seed)
x = unif_rej(a, b)
set.seed(seed)
y = unif_rej_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
a = 5; b = 6
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = exp_rej(a, b)
set.seed(seed)
y = exp_rej_r(a, b)$x
x == y
a = sample(-10:10, size = 1)
lower_b(a) == lower_b_r(a)
a = sample(-10:10, size = 1)
lower_b1(a) == lower_b1_r(a)
a = sample(-10:10, size = 1)
lower_b2(a) == lower_b2_r(a)
seed = sample(1:1000, size = 1)
a = -1; b = Inf
set.seed(seed)
x = sample_case1(a, b)
set.seed(seed)
y = sample_case1_r(a, b)$x
x == y
a = 0.1; b = Inf
set.seed(seed)
x = sample_case1(a, b)
set.seed(seed)
y = sample_case1_r(a, b)$x
x == y
a = 5; b = Inf
set.seed(seed)
x = sample_case1(a, b)
set.seed(seed)
y = sample_case1_r(a, b)$x
x == y
a = -1; b = sample(1:10, size = 1)
set.seed(seed)
x = sample_case2(a, b)
set.seed(seed)
y = sample_case2_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
a = 0.5; b = sample(1:10, size = 1)
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
a = 1; b = sample(2:10, size = 1)
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_case3(a, b)
set.seed(seed)
y = sample_case3_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
a = -10; b = -1
set.seed(seed)
x = sample_case4(a, b)
set.seed(seed)
y = sample_case4_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
a = -10; b = -1
set.seed(seed)
x = sample_case5(a, b)
set.seed(seed)
y = sample_case5_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
a = rnorm(1, mean = 0, sd = 10); b = sample(a+1:a+100, size = 1)
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
seed = 1234
a = 0.707176
b = 1.978338
set.seed(seed)
x = sample_tuvsn(a, b)
set.seed(seed)
y = sample_tuvsn_r(a, b)$x
x == y
seed = sample(1:1000, size = 1)
lower = rnorm(1, mean = 0, sd = 1)
upper = Inf
set.seed(seed)
x = as.vector(rtuvn(3, 0, 1, lower, upper))
set.seed(seed)
y = rtuvn_r(3, 0, 1, lower, upper)
x == y
seed = sample(1:1000, size = 1)
Mean = rep(100, -200)
rho = 0.5
Sigma = matrix(c(10,rho,rho,0.1),2,2)
D = matrix(c(1,1,1,-1),2,2)
varp = Sigma[1,1]+Sigma[2,2]+2*Sigma[1,2] # var of the sum
varm = Sigma[1,1]+Sigma[2,2]-2*Sigma[1,2] # var of the diff
sd = c(sqrt(varp),sqrt(varm))
lower = -1.5*sd; upper = 1.5*sd; init = Mean
n = 500
seed = sample(1:1000, size = 1)
Mean = rep(100, 200)
rho = 0.5
Sigma = matrix(c(10,rho,rho,0.1),2,2)
D = matrix(c(1,1,1,-1),2,2)
varp = Sigma[1,1]+Sigma[2,2]+2*Sigma[1,2] # var of the sum
varm = Sigma[1,1]+Sigma[2,2]-2*Sigma[1,2] # var of the diff
sd = c(sqrt(varp),sqrt(varm))
lower = -1.5*sd; upper = 1.5*sd; init = Mean
n = 500
Sigma_chol = NULL
R_tilde = D
set.seed(seed)
x = rtmvn_r(n, Mean, Sigma = Sigma, D, lower, upper, init)
set.seed(seed)
y = rtmvn(n, Mean, Sigma, D, lower, upper, init)
x == y
microbenchmark(
rtmvn_r(n, Mean, Sigma = Sigma, D, lower, upper, init),
rtmvn(n, Mean, Sigma, D, lower, upper, init)
)
library(tmvn)
library(tmvn)
rtmvn_r
library(tmvn)
library(RcppEigen)
.Call("eigen_version", FALSE)
install.packages("RcppEigen")
install.packages("RcppEigen")
library(Rcpp)
sessionInfo()
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("RcppEigen")
